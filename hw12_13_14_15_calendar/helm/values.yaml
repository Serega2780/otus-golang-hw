# Default values for calendar.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

calendar:
  replicaCount: 1

  image:
    repository: calendar
    pullPolicy: IfNotPresent
    tag: "0.0.1"

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: { }
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: { }

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }

  service:
    type: NodePort
    httpPort: 8585
    grpcPort: 6565
    httpNodePort: 30585
    dnsPrefix: calendar.svc.cluster.local

  ingress:
    enabled: true
    className: nginx
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: calendar-app.local
        paths:
          - path: /
            pathType: Prefix
    tls: [ ]
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: { }
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }

scheduler:
  replicaCount: 1

  image:
    repository: scheduler
    pullPolicy: IfNotPresent
    tag: "0.0.1"

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: { }
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: { }

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }

  service:
    dnsPrefix: calendar.svc.cluster.local

  ingress:
    enabled: false
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: ""
        paths:
          - path: /
            pathType: Prefix
    tls: [ ]
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: { }
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }

sender:
  replicaCount: 1

  image:
    repository: sender
    pullPolicy: IfNotPresent
    tag: "0.0.1"

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: { }
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: { }

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }

  service:
    dnsPrefix: calendar.svc.cluster.local

  ingress:
    enabled: false
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: ""
        paths:
          - path: /
            pathType: Prefix
    tls: [ ]
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: { }
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }

postgres:
  replicaCount: 1

  image:
    repository: postgres
    pullPolicy: IfNotPresent
    tag: "11.6"

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: { }
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: { }

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }

  service:
    type: NodePort
    port: 5432
    nodePort: 30432
    dnsPrefix: calendar.svc.cluster.local

  ingress:
    enabled: false
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: ""
        paths:
          - path: /
            pathType: Prefix
    tls: [ ]
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: { }
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }

rabbit:
  replicaCount: 1

  image:
    repository: rabbitmq
    pullPolicy: IfNotPresent
    tag: "3-management-alpine"

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: { }
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: { }

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }

  service:
    type: NodePort
    internal: 5672
    external: 15672
    np: 30672
    dnsPrefix: calendar.svc.cluster.local

  ingress:
    enabled: false
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: ""
        paths:
          - path: /
            pathType: Prefix
    tls: [ ]
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: { }
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }